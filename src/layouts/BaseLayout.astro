---
import '@styles/app.css';

import { ModeWatcher } from 'mode-watcher';

import Footer from '@components/common/Footer.astro';
import BaseMeta from '@components/common/meta/BaseMeta.astro';
import Favicons from '@components/common/meta/Favicons.astro';
import Verifications from '@components/common/meta/Verifications.astro';
import Navigation from '@components/common/Navigation.astro';
import { LOCALE, VERIFICATION_TOKENS } from '@config';

const canonicalURL = new URL(Astro.url.pathname, Astro.site).href;
---

<!doctype html>
<html lang=`${LOCALE.lang ?? "en"}` class="smooth-scroll antialiased">
  <head>
    <BaseMeta />

    <Favicons />

    <!-- Verification Metatags -->
    <Verifications googleSiteVerification={VERIFICATION_TOKENS.google} />

    <link rel="canonical" href={canonicalURL} />

    <!-- Remainder of the meta tags -->
    <slot name="meta" />

    <!-- Toggle Theme -->
    <script is:inline>
      const isBrowser = typeof localStorage !== 'undefined';
      const getThemePreference = () => {
        if (isBrowser && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches
          ? 'dark'
          : 'light';
      };
      const isDark = getThemePreference() === 'dark';
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

      if (isBrowser) {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ['class']
        });
      }
    </script>
  </head>

  <body class="flex min-h-svh flex-col bg-white dark:bg-black">
    <ModeWatcher client:load />
    <Navigation />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>
